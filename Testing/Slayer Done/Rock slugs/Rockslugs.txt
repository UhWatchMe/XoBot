import xobot.client.callback.listeners.MessageListener;
import xobot.client.callback.listeners.PaintListener;
import xobot.script.ActiveScript;
import xobot.script.Manifest;
import xobot.script.methods.*;
import xobot.script.methods.input.KeyBoard;
import xobot.script.util.Time;
import xobot.script.wrappers.Path;
import xobot.script.wrappers.Tile;

import java.awt.*;

@Manifest(authors = { "xBear" }, name = "monster", version = 1.0, description = "Cuts gems into Bolt Tips.")

public final class monster extends ActiveScript implements PaintListener, MessageListener {

    //data Data = new data();

    Tile fremmenikDungeonRockSlugTile = new Tile(2800, 10017);
    public Tile[] fremmenikDungeonRockSlugPath = { new Tile(2795, 9997, 0), new Tile(2780, 10000, 0),
            new Tile(2780, 10015, 0), new Tile(2795, 10019, 0), fremmenikDungeonRockSlugTile};

    private int state = -1;
    public boolean isAtDestination = false;

    public void walkTo() {
        getState();
        switch (state) {
            case 1:
                teleportToArea();
                break;

            case 2:
                walkToMonster();
                break;

            case 3:
                //Already at Rock Slugs
                break;

            case 0:
                goHome();
                break;
        }

    }

    private void goHome() {
        KeyBoard.typeWord("::home", true);
        Time.sleep(2400, 3000);

    }

    private void teleportToArea() {
        Teleport.teleport("Fremennik slayer dungeon");
        Time.sleep(2800, 3200);
    }

    private void walkToMonster() {
        Path p = new Path(fremmenikDungeonRockSlugPath);
        while (Calculations.distanceTo(fremmenikDungeonRockSlugTile) > 3 && !Players.getMyPlayer().isMoving() && Calculations.distanceTo(fremmenikDungeonRockSlugTile) <= 100 && !new Tile(3056, 9555).isReachable()) {
            Tile a = p.getNextTile();
            Walking.walkTo(a);
            Time.sleep(3500);
        }

    }

    private void getState() {
        if (NPCs.getNearest(Data.teleportWizard) != null) != null) {
            state = 1;
            isAtDestination = false;
        } else if (Calculations.distanceTo(fremmenikDungeonRockSlugTile) <= 40 && Calculations.distanceTo(fremmenikDungeonRockSlugTile) >= 5) {
            state = 2;
            isAtDestination = false;
        } else if (fremmenikDungeonRockSlugTile.isReachable()){
            state = 3;
            isAtDestination = true;
        } else {
            state = 0;
            isAtDestination = false;
        }
    }
}
